# Generated by Django 5.1.4 on 2024-12-18 16:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('services', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='appointment',
            options={'verbose_name': 'Запись', 'verbose_name_plural': 'Записи'},
        ),
        migrations.AlterModelOptions(
            name='salon',
            options={'verbose_name': 'Салон', 'verbose_name_plural': 'Салоны'},
        ),
        migrations.AlterModelOptions(
            name='schedule',
            options={'verbose_name': 'Расписание', 'verbose_name_plural': 'Расписание'},
        ),
        migrations.AlterModelOptions(
            name='service',
            options={'verbose_name': 'Услуга', 'verbose_name_plural': 'Услуги'},
        ),
        migrations.AlterModelOptions(
            name='specialist',
            options={'verbose_name': 'Специалист', 'verbose_name_plural': 'Специалисты'},
        ),
        migrations.RemoveField(
            model_name='schedule',
            name='service',
        ),
        migrations.AlterField(
            model_name='appointment',
            name='customer',
            field=models.CharField(max_length=100, verbose_name='Имя заказчика'),
        ),
        migrations.AlterField(
            model_name='appointment',
            name='customer_phone',
            field=models.CharField(max_length=100, verbose_name='Телефон заказчика'),
        ),
        migrations.AlterField(
            model_name='appointment',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='services.schedule', verbose_name='Запись'),
        ),
        migrations.AlterField(
            model_name='salon',
            name='address',
            field=models.CharField(max_length=100, verbose_name='Адрес'),
        ),
        migrations.AlterField(
            model_name='salon',
            name='phone',
            field=models.CharField(max_length=100, verbose_name='Телефон'),
        ),
        migrations.AlterField(
            model_name='schedule',
            name='date',
            field=models.DateField(verbose_name='Дата'),
        ),
        migrations.AlterField(
            model_name='schedule',
            name='salon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='services.salon', verbose_name='Салон'),
        ),
        migrations.AlterField(
            model_name='schedule',
            name='specialist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='services.specialist', verbose_name='Специалист'),
        ),
        migrations.AlterField(
            model_name='schedule',
            name='time',
            field=models.TimeField(verbose_name='Время'),
        ),
        migrations.AlterField(
            model_name='service',
            name='description',
            field=models.TextField(verbose_name='Описание услуги'),
        ),
        migrations.AlterField(
            model_name='service',
            name='price',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена услуги'),
        ),
        migrations.AlterField(
            model_name='service',
            name='title',
            field=models.CharField(max_length=100, verbose_name='Название улсуги'),
        ),
        migrations.AlterField(
            model_name='specialist',
            name='name',
            field=models.CharField(max_length=100, verbose_name='Имя специалиста'),
        ),
        migrations.AlterField(
            model_name='specialist',
            name='salon',
            field=models.ManyToManyField(related_name='specialists', to='services.salon', verbose_name='Салон'),
        ),
        migrations.AlterField(
            model_name='specialist',
            name='service',
            field=models.ManyToManyField(related_name='specialists', to='services.service', verbose_name='Услуга'),
        ),
    ]
